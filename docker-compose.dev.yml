services:
  db-migration:
    container_name: infisical-db-migration
    depends_on:
      db:
        condition: service_healthy
    image: docker.io/infisical/infisical:latest-postgres
    env_file: .env
    command: npm run migration:latest
    pull_policy: always
    networks:
      - local-network

  backend:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      db-migration:
        condition: service_completed_successfully
    image: docker.io/infisical/infisical:latest-postgres
    pull_policy: always
    env_file: .env
    ports:
      - 80:8080
    environment:
      - NODE_ENV=production
    networks:
      - local-network

  redis:
    image: docker.io/redis
    container_name: infisical-redis
    env_file: .env
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    networks:
      - local-network
    volumes:
      - redis_data:/data

  db:
    container_name: infisical-db
    image: docker.io/postgres:15-alpine
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - local-network
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

  mariadb:
    container_name: infisical-mariadb
    image: docker.io/mariadb:latest
    restart: always
    env_file: .env
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - local-network

  minio:
    container_name: infisical-minio
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    restart: always
    env_file: .env
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    networks:
      - local-network

  dozzle:
    image: docker.io/amir20/dozzle:latest
    container_name: infisical-dozzle
    restart: unless-stopped
    environment:
      DOZZLE_AUTH_PROVIDER: simple
    ports:
      - "8123:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/data
    networks:
      - local-network

volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  mariadb_data:
    driver: local

networks:
  local-network:
    external: true
